/* Copyright (c) 2012, Knowledge Media Institute
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *   * Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 *   * Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in the
 *     documentation and/or other materials provided with the distribution.
 *   * Neither the name of the <organization> nor the
 *     names of its contributors may be used to endorse or promote products
 *     derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package uk.ac.open.kmi.fusion.index;

import java.io.File;

import org.apache.lucene.store.Directory;

import uk.ac.open.kmi.fusion.api.ILuceneBlocker;
import uk.ac.open.kmi.fusion.index.search.ILuceneSearchStrategy;
import uk.ac.open.kmi.fusion.index.search.LuceneAlignedFieldsSearchStrategy;
import uk.ac.open.kmi.fusion.index.search.LuceneAllFieldsSearchStrategy;
import uk.ac.open.kmi.fusion.index.store.ILuceneStore;
import uk.ac.open.kmi.fusion.index.store.LuceneDiskStoreStrategy;
import uk.ac.open.kmi.fusion.index.store.LuceneMemoryStoreStrategy;
import uk.ac.open.kmi.fusion.util.FusionException;

public class LuceneIndexerFactory {

	/*public static enum LuceneSearchPolicy {
		ALIGNED_FIELDS, ALL_FIELDS
	}
	
	public static enum LuceneStorePolicy {
		DISK, MEMORY
	}*/
	
	private LuceneIndexerFactory() {
		
	}

	public static ILuceneBlocker createDiskIndexer(LuceneSearchPolicy policy, String indexDir) throws FusionException {
		ILuceneStore store = new LuceneDiskStoreStrategy(new File(indexDir));
		store.init();
		ILuceneSearchStrategy searchStrategy = createLuceneSearchStrategy(store, policy);
		return new LuceneIndexer(store, searchStrategy);
	}
	
	public static ILuceneBlocker createMemoryIndexer(LuceneSearchPolicy policy) throws FusionException {
		ILuceneStore store = new LuceneMemoryStoreStrategy();
		store.init();
		ILuceneSearchStrategy searchStrategy = createLuceneSearchStrategy(store, policy);
		return new LuceneIndexer(store, searchStrategy);
	}
	
	private static ILuceneSearchStrategy createLuceneSearchStrategy(ILuceneStore store, LuceneSearchPolicy policy) {
		switch(policy) {
		case ALIGNED_FIELDS:
			return new LuceneAlignedFieldsSearchStrategy(store.getDirectory());
		case ALL_FIELDS:
		default:
			return new LuceneAllFieldsSearchStrategy(store.getDirectory());
		}
	}
	
}
